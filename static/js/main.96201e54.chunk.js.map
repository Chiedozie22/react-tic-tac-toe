{"version":3,"sources":["svgs/Circle.js","svgs/Cross.js","Grid.js","PlayerInfo.js","App.js","index.js","grid.module.css"],"names":["Circle","props","size","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","stroke-width","Cross","d","stroke-linecap","stroke-opacity","Grid","divisions","positions","map","value","index","svg","isWinningIndex","winningIndexes","includes","className","styles","winner","onClick","setPositions","container","PlayerInfo","turn","App","React","useState","name","undefined","indexes","Array","data","setdata","console","log","prevData","forEach","line","a","b","c","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+KAEe,SAASA,EAAOC,GAC3B,IAAMC,EAAOD,EAAMC,MAAQ,IAE3B,OACI,qBAAKC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,cAAcC,KAAK,OAAOC,MAAM,6BAAxE,SACA,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,QAAQC,eAAa,SCLpD,SAASC,EAAMZ,GAC1B,IAAMC,EAAOD,EAAMC,MAAQ,IAE3B,OACI,sBAAKC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,cAAcC,KAAK,OAAOC,MAAM,6BAAxE,UACA,sBAAMO,EAAE,eAAeH,OAAO,QAAQC,eAAa,KAAKG,iBAAe,UACvE,sBAAMD,EAAE,eAAeH,OAAO,QAAQC,eAAa,KAAKG,iBAAe,UACvE,sBAAMD,EAAE,eAAeH,OAAO,QAAQK,iBAAe,MAAMJ,eAAa,KAAKG,iBAAe,a,oBCMrF,SAASE,EAAKhB,GACzB,IAAMiB,EAAYjB,EAAMkB,UAAUC,KAAI,SAACC,EAAOC,GAC1C,IAZUC,EAYJC,EAAiBvB,EAAMwB,eAAeC,SAASJ,GAErD,OACI,qBACAK,UAAaH,EAAiBI,IAAOC,OAAS,KAE9CC,QAAW,WACP7B,EAAM8B,aAAaT,IAJvB,UAfMC,EAsBSF,EArBX,UAARE,EACO,cAACV,EAAD,CAAOX,KAAQ,KACP,WAARqB,EACA,cAACvB,EAAD,CAAQE,KAAQ,KAEhB,OAWIoB,MAUf,OACI,qBAAKK,UAAaC,IAAOI,UAAzB,SACKd,IChCE,SAASe,EAAWhC,GAG/B,OAFgBA,EAAM4B,OAAS,0CAAa5B,EAAM4B,UAAe,wCAAW5B,EAAMiC,QCCvE,SAASC,EAAIlC,GAAQ,IAAD,EACPmC,IAAMC,SAAS,CACnCR,OAAQ,CACJS,UAAMC,EACNC,QAAS,IAEbN,KAAM,QACNf,UAAW,IAAIsB,MAAM,GAAGnC,KAAK,QAPF,mBACxBoC,EADwB,KAClBC,EADkB,KAY/B,OAFAC,QAAQC,IAAIH,GAGR,qCACJ,cAACzB,EAAD,CACIQ,eAAkBiB,EAAKb,OAAOW,QAC9BrB,UAAauB,EAAKvB,UAClBY,aAAgB,SAAAT,GACZqB,GAAQ,SAAAG,GACJ,GAAKA,EAAS3B,UAAUG,IAAWwB,EAASjB,OAAOS,KAyB/C,OAAOQ,EAxBP,IAAMJ,EAAI,eAAOI,GACjBJ,EAAKvB,UAAUG,GAASoB,EAAKR,KAqBjC,MApBkB,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAELa,SAAQ,SAAAC,GAAS,IAAD,cACDA,EADC,GACXC,EADW,KACRC,EADQ,KACNC,EADM,KAEdT,EAAKvB,UAAU8B,IACfP,EAAKvB,UAAU8B,KAAOP,EAAKvB,UAAU+B,IACrCR,EAAKvB,UAAU8B,KAAOP,EAAKvB,UAAUgC,KACjCT,EAAKb,OAAOS,KAAOI,EAAKR,KACxBQ,EAAKb,OAAOW,QAAUQ,MAGlCN,EAAKR,KAAsB,UAAdQ,EAAKR,KAAoB,SAAW,QAC9CQ,QAQf,cAACT,EAAD,CAAYC,KAAQQ,EAAKR,KAAML,OAAUa,EAAKb,OAAOS,UClD7Dc,IAASC,OAAO,cAAClB,EAAD,IAASmB,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,wB","file":"static/js/main.96201e54.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Circle(props){\r\n    const size = props.size || 100\r\n\r\n    return (\r\n        <svg width={size} height={size} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"50\" cy=\"50\" r=\"45\" stroke=\"black\" stroke-width=\"10\"/>\r\n        </svg>\r\n\r\n    )\r\n}","import react from 'react';\r\n\r\nexport default function Cross(props){\r\n    const size = props.size || 100\r\n\r\n    return(\r\n        <svg width={size} height={size} viewBox=\"0 0 135 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M5 5L130 130\" stroke=\"black\" stroke-width=\"10\" stroke-linecap=\"round\"/>\r\n        <path d=\"M5 130L130 5\" stroke=\"black\" stroke-width=\"10\" stroke-linecap=\"round\"/>\r\n        <path d=\"M5 130L130 5\" stroke=\"black\" stroke-opacity=\"0.2\" stroke-width=\"10\" stroke-linecap=\"round\"/>\r\n        </svg>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport Circle from './svgs/Circle';\r\nimport Cross from './svgs/Cross';\r\nimport styles from './grid.module.css';\r\n\r\nconst renderSVG = svg => {\r\n    if (svg === 'cross') {\r\n        return <Cross size = {40}/>\r\n    } else if (svg === 'circle') {\r\n        return <Circle size = {40}/>\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default function Grid(props){\r\n    const divisions = props.positions.map((value, index) =>{\r\n        const isWinningIndex = props.winningIndexes.includes(index)\r\n\r\n        return (\r\n            <div \r\n            className = {isWinningIndex ? styles.winner : null}\r\n            key = {index}\r\n            onClick = {() => {\r\n                props.setPositions(index)\r\n            }}\r\n            >\r\n                {renderSVG(value)}\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className = {styles.container}>\r\n            {divisions}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function PlayerInfo(props) {\r\n    const element = props.winner ? <h1>Winner: {props.winner}</h1> : <h2>Turn: {props.turn}</h2>\r\n\r\n    return element\r\n}","import React from 'react';\r\nimport Grid from './Grid';\r\nimport PlayerInfo from './PlayerInfo'\r\n\r\nexport default function App(props) {\r\n    const [data, setdata] = React.useState({\r\n        winner: {\r\n            name: undefined,\r\n            indexes: []\r\n        },\r\n        turn: 'cross',\r\n        positions: new Array(9).fill(null)\r\n    })\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <>\r\n    <Grid\r\n        winningIndexes = {data.winner.indexes}\r\n        positions = {data.positions} \r\n        setPositions = {index => { \r\n            setdata(prevData =>{\r\n                if (!prevData.positions[index] && !prevData.winner.name){\r\n                    const data = {...prevData}\r\n                    data.positions[index] = data.turn\r\n                    const lines = [\r\n                        [0, 1, 2],\r\n                        [3, 4, 5],\r\n                        [6, 7, 8],\r\n                        [0, 3, 6],\r\n                        [1, 4, 7],\r\n                        [2, 5, 8],\r\n                        [0, 4, 8],\r\n                        [2, 4, 6]\r\n                    ]\r\n                    lines.forEach(line => {\r\n                        const [a, b,c] = line\r\n                        if (data.positions[a] &&\r\n                            data.positions[a] === data.positions[b] &&\r\n                            data.positions[a] === data.positions[c]){\r\n                                data.winner.name = data.turn\r\n                                data.winner.indexes = line\r\n                            }\r\n                    })\r\n                    data.turn = (data.turn === 'cross') ? 'circle' : 'cross'\r\n                return data\r\n                } else {\r\n                    return prevData\r\n                }\r\n                \r\n            })\r\n        }}\r\n        />\r\n        <PlayerInfo turn = {data.turn} winner = {data.winner.name} />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"grid_container__k1-eh\",\"winner\":\"grid_winner__314tJ\"};"],"sourceRoot":""}